user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log info;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

stream {
    include /etc/nginx/stream-enabled/*.conf;
}

http {
    # Главная страница
    server {
        listen 127.0.0.1:7443 ssl http2 proxy_protocol;
        server_name mydomain.com;

        ssl_certificate     /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;

        root /var/www/mydomain.com/;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    #      drive.mydomain.com
    map $ssl_client_verify $cert_auth_ok_drive {
        SUCCESS 0;
        default 1;
    }

    server {
        listen 127.0.0.1:7443 ssl http2 proxy_protocol;
        server_name drive.mydomain.com;
	    set_real_ip_from 127.0.0.1;
	    real_ip_header proxy_protocol;

        ssl_certificate     /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;
        ssl_client_certificate /etc/nginx/certs/root.pem;
        ssl_verify_client optional;

        client_max_body_size 500G;
        # Публично доступный share
        location /share {
            proxy_pass http://127.0.0.1:5002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Все остальные урлы — сертификат ИЛИ Basic Auth
        location / {
            error_page 401 = @basic_auth_drive;
            if ($cert_auth_ok_drive) { return 401; }
            proxy_pass http://127.0.0.1:5002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location @basic_auth_drive {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:5002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    #      fb.mydomain.com
    map $ssl_client_verify $cert_auth_ok_fb {
        SUCCESS 0;
        default 1;
    }

    server {
        listen 127.0.0.1:7443 ssl http2  proxy_protocol;
        server_name fb.mydomain.com;

        ssl_certificate     /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;
        ssl_client_certificate /etc/nginx/certs/root.pem;
        ssl_verify_client optional;

        client_max_body_size 500G;

        location / {
            error_page 401 = @basic_auth_fb;
            if ($cert_auth_ok_fb) { return 401; }
            proxy_pass http://127.0.0.1:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location @basic_auth_fb {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    #      qb.mydomain.com
    map $ssl_client_verify $cert_auth_ok_qb {
        SUCCESS 0;
        default 1;
    }

    server {
        listen 127.0.0.1:7443 ssl http2 proxy_protocol;
        server_name qb.mydomain.com;

        ssl_certificate     /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;
        ssl_client_certificate /etc/nginx/certs/root.pem;
        ssl_verify_client optional;

        client_max_body_size 500G;

        location / {
            error_page 401 = @basic_auth_qb;
            if ($cert_auth_ok_qb) { return 401; }
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location @basic_auth_qb {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    #      dufs.mydomain.com
    map $ssl_client_verify $cert_auth_ok_dufs {
        SUCCESS 0;
        default 1;
    }

    server {
        listen 127.0.0.1:7443 ssl http2 proxy_protocol;
        server_name dufs.mydomain.com;

        ssl_certificate     /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;
        ssl_client_certificate /etc/nginx/certs/root.pem;
        ssl_verify_client optional;

        client_max_body_size 500G;

        location / {
            error_page 401 = @basic_auth_dufs;
            if ($cert_auth_ok_dufs) { return 401; }
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location @basic_auth_dufs {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
