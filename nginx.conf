user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log info;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

stream {
    include /etc/nginx/stream-enabled/*.conf;
}

http {
    log_format main '$remote_addr - $host "$request" $status';
    access_log /var/log/nginx/access.log main;
    ssl_protocols TLSv1.3;

    server {
        listen 127.0.0.1:7443 ssl proxy_protocol;
        http2 on;
        server_name mydomain.com;

        ssl_certificate /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;

        root /var/www/mydomain.com/;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    server {
        listen 127.0.0.1:7443 ssl proxy_protocol;
        http2 on;
        server_name drive.mydomain.com;
        set_real_ip_from 127.0.0.1;
        real_ip_header proxy_protocol;

        ssl_certificate /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;
        ssl_client_certificate /etc/nginx/certs/root.pem;
        ssl_verify_client optional;

        auth_basic_user_file /etc/nginx/.htpasswd;
        client_max_body_size 500G;

        location /share {
            proxy_pass http://127.0.0.1:5002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            if ($ssl_client_verify = SUCCESS) {
                set $auth_basic off;
            }

            if ($ssl_client_verify != SUCCESS) {
                set $auth_basic Restricted;
            }

            auth_basic $auth_basic;
            proxy_pass http://127.0.0.1:5002;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Fb-Usernoauth admin;
        }
    }

    server {
        listen 127.0.0.1:7443 ssl proxy_protocol;
        http2 on;
        server_name fb.mydomain.com qb.mydomain.com dufs.mydomain.com;

        ssl_certificate     /etc/letsencrypt/live/mydomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem;
        ssl_client_certificate /etc/nginx/certs/root.pem;
        ssl_verify_client optional;

        auth_basic_user_file /etc/nginx/.htpasswd;
        client_max_body_size 500G;

        location / {
            set $upstream "";
            if ($host = "fb.mydomain.com")   { set $upstream "http://127.0.0.1:5001"; }
            if ($host = "qb.mydomain.com")   { set $upstream "http://127.0.0.1:8080"; }
            if ($host = "dufs.mydomain.com") { set $upstream "http://127.0.0.1:5000"; }

            if ($ssl_client_verify = SUCCESS) {
                set $auth_basic off;
            }
            if ($ssl_client_verify != SUCCESS) {
                set $auth_basic Restricted;
            }

            auth_basic $auth_basic;
            proxy_pass $upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
